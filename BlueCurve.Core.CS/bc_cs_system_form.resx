<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>