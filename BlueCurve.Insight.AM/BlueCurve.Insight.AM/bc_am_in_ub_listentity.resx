<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="uxAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACEAAAAeCAYAAACiyHcXAAAABGdBTUEAAK/INwWK6QAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAIFSURBVFhH7dff
        S1NhHAbw75/kjeuiFUZWO1E66pgHs0Zt0TYn5JYp++V0P8zK5iixc+aFmdNKhSKihBL7i7roD3g6z4HB
        6WqHF86OFw0eOBfj+Ty8ZzBe+f0HYJ6ud6BPJhG+eA0DofO+hf106HVt4cP0XANDER3xR0t4XLVQbu75
        FvbToUeXvtRa29D0eyivfcTy5ne8eHuMlzu/fAv76dCj23i1A4neTmJ25R1Wto77Hrr05WYsi6p5hHr7
        R99D98bdGYiRWkBl4yiw0JeJ6ToKr78GFvoynq5jtvklsNAX/eESss8/KQWuj2oHfYkmKsgsHyrFPUK1
        g75cv7+AZG1fKe4Rqh30RYuVEK98UIp7hGoHfbl8p4BYaVcp7hGqHfRleCKPyXynZ9yg12cvvfTlgjEP
        Y267Z7zC7u956aUvgyMzuJIye0ZlhJde+jI4mkUkbSnFPUy1g/7pGBGyl2hTllLcJ6HaQV9OyYicfQpt
        pfx7EmododEc5Ew0h6uZdmCh/38E34BzEufG5qGlzUBehzZlIqw/sf/K44u49KAVyAi6I4kapLDaQdgo
        2yOsPg+xHLe4ugsptQ6QqbRxdryE4UQTkdSGr2PYT4ce3aLtO9fAhvkZ1fVD3Mo8w5CRd34sfoX9dOjR
        da6B3UtpcW0fza1vePP+JzYPTnwL++nQ69p/AVGE+oGSlmmrAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="uxRemove.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACEAAAAeCAYAAACiyHcXAAAABGdBTUEAAK/INwWK6QAAAAlwSFlzAAAO
        uAAADrgBakH1WwAAABp0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjUuMTAw9HKhAAAB8ElEQVRYR+3X
        S08TURwF8P9HckNdWA1G1I5BaHSUCSINtsa2lERaEdIXhT54WxokOFMWiBQfQKIxRkmU6Cdy4Qc4zpnY
        naHtJNPLgiYn6er8Tu5t0lz5/QdgFjcb0Eei8F/rxwXfFc/Cfjr0mrbwy8R0Bb0BHeGn83hWtJCvvvUs
        7KdDjy59KdV2oeljyK9/wML2N6y+PsGLvV+ehf106NGtbOxBgg+imFp6g6Wdk66HLn25G0qiaB6jXP/e
        9dC9MzoJMWKzKGwdKwt9GZ4oI/Pyi7LQl6F4GVPVz8pCX/Qn80iufFQW+hKMFJBYOFIW+nL70SyipQNl
        oS9aKIdw4b2y0JcbDzMI5faVhb70Dacxkm60DFx82umlL1eNGRjTuy3jYkPLTrr0pWdgEjdjZsu4GdFO
        L33pGUwiELeUhf7ZGOGzl2jjVsf53+m56aEvbkacdn2dDvk3ImWfQr3jnD6k/T7fYApyMZjCrURdWeif
        j+ANOCdx+d4MtLip5Dq0cRN+/bn9Vx6ew/XHNSUj6A5ESpDMWgN+I2+PsLo8xHLc7No+JFc7RKJQx6Wh
        HPoiVQRiW56OYT8denSztu88AyvmJxQ3j3A/sYxeI+38WLwK++nQo+s8A5uP0uz6Aao7X/Hq3Q9sH/70
        LOynQ69p/wUMycwNV3wKMAAAAABJRU5ErkJggg==
</value>
  </data>
</root>